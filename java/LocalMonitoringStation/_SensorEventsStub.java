package LocalMonitoringStation;


/**
* LocalMonitoringStation/_SensorEventsStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ./idl/lms.idl
* Friday, 29 April 2016 00:01:59 o'clock BST
*/

public class _SensorEventsStub extends org.omg.CORBA.portable.ObjectImpl implements LocalMonitoringStation.SensorEvents
{

  public String lmsname ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_lmsname", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return lmsname (        );
            } finally {
                _releaseReply ($in);
            }
  } // lmsname

  public SensorCamera.Sensor sensor ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_sensor", true);
                $in = _invoke ($out);
                SensorCamera.Sensor $result = SensorCamera.SensorHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return sensor (        );
            } finally {
                _releaseReply ($in);
            }
  } // sensor

  public void record_log (LocalMonitoringStation.Log aLog)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("record_log", true);
                LocalMonitoringStation.LogHelper.write ($out, aLog);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                record_log (aLog        );
            } finally {
                _releaseReply ($in);
            }
  } // record_log

  public void record_alarm (LocalMonitoringStation.Alert anAlert)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("record_alarm", true);
                LocalMonitoringStation.AlertHelper.write ($out, anAlert);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                record_alarm (anAlert        );
            } finally {
                _releaseReply ($in);
            }
  } // record_alarm

  public LocalMonitoringStation.Log[] get_logs ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("get_logs", true);
                $in = _invoke ($out);
                LocalMonitoringStation.Log $result[] = LocalMonitoringStation.LogsHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return get_logs (        );
            } finally {
                _releaseReply ($in);
            }
  } // get_logs

  public LocalMonitoringStation.Alert[] get_alerts ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("get_alerts", true);
                $in = _invoke ($out);
                LocalMonitoringStation.Alert $result[] = LocalMonitoringStation.AlertsHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return get_alerts (        );
            } finally {
                _releaseReply ($in);
            }
  } // get_alerts

  public LocalMonitoringStation.Log[] get_timelogs (long timestamp)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("get_timelogs", true);
                $out.write_longlong (timestamp);
                $in = _invoke ($out);
                LocalMonitoringStation.Log $result[] = LocalMonitoringStation.LogsHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return get_timelogs (timestamp        );
            } finally {
                _releaseReply ($in);
            }
  } // get_timelogs

  public LocalMonitoringStation.Alert[] get_timealerts (long timestamp)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("get_timealerts", true);
                $out.write_longlong (timestamp);
                $in = _invoke ($out);
                LocalMonitoringStation.Alert $result[] = LocalMonitoringStation.AlertsHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return get_timealerts (timestamp        );
            } finally {
                _releaseReply ($in);
            }
  } // get_timealerts

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:LocalMonitoringStation/SensorEvents:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _SensorEventsStub
