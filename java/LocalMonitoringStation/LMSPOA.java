package LocalMonitoringStation;


/**
* LocalMonitoringStation/LMSPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ./idl/lms.idl
* Friday, 29 April 2016 00:01:59 o'clock BST
*/

public abstract class LMSPOA extends org.omg.PortableServer.Servant
 implements LocalMonitoringStation.LMSOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("_get_name", new java.lang.Integer (0));
    _methods.put ("add_camera", new java.lang.Integer (1));
    _methods.put ("record_camera", new java.lang.Integer (2));
    _methods.put ("raise_alerts", new java.lang.Integer (3));
    _methods.put ("get_zones", new java.lang.Integer (4));
    _methods.put ("get_camera", new java.lang.Integer (5));
    _methods.put ("retrieve_logs", new java.lang.Integer (6));
    _methods.put ("retrieve_alerts", new java.lang.Integer (7));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // LocalMonitoringStation/LMS/_get_name
       {
         String $result = null;
         $result = this.name ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // LocalMonitoringStation/LMS/add_camera
       {
         SensorCamera.Sensor aSensor = SensorCamera.SensorHelper.read (in);
         String aZone = in.read_string ();
         this.add_camera (aSensor, aZone);
         out = $rh.createReply();
         break;
       }

       case 2:  // LocalMonitoringStation/LMS/record_camera
       {
         SensorCamera.Sensor aSensor = SensorCamera.SensorHelper.read (in);
         String aZone = in.read_string ();
         SensorCamera.Image aReading = SensorCamera.ImageHelper.read (in);
         this.record_camera (aSensor, aZone, aReading);
         out = $rh.createReply();
         break;
       }

       case 3:  // LocalMonitoringStation/LMS/raise_alerts
       {
         SensorCamera.Sensor aSensor = SensorCamera.SensorHelper.read (in);
         String aZone = in.read_string ();
         SensorCamera.Image aReading = SensorCamera.ImageHelper.read (in);
         this.raise_alerts (aSensor, aZone, aReading);
         out = $rh.createReply();
         break;
       }

       case 4:  // LocalMonitoringStation/LMS/get_zones
       {
         String $result[] = null;
         $result = this.get_zones ();
         out = $rh.createReply();
         LocalMonitoringStation.ZonesHelper.write (out, $result);
         break;
       }

       case 5:  // LocalMonitoringStation/LMS/get_camera
       {
         String zone = in.read_string ();
         SensorCamera.Sensor $result[] = null;
         $result = this.get_camera (zone);
         out = $rh.createReply();
         LocalMonitoringStation.SensorsHelper.write (out, $result);
         break;
       }

       case 6:  // LocalMonitoringStation/LMS/retrieve_logs
       {
         String sensor = in.read_string ();
         String zone = in.read_string ();
         LocalMonitoringStation.Log $result[] = null;
         $result = this.retrieve_logs (sensor, zone);
         out = $rh.createReply();
         LocalMonitoringStation.LogsHelper.write (out, $result);
         break;
       }

       case 7:  // LocalMonitoringStation/LMS/retrieve_alerts
       {
         String sensor = in.read_string ();
         String zone = in.read_string ();
         LocalMonitoringStation.Alert $result[] = null;
         $result = this.retrieve_alerts (sensor, zone);
         out = $rh.createReply();
         LocalMonitoringStation.AlertsHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:LocalMonitoringStation/LMS:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public LMS _this() 
  {
    return LMSHelper.narrow(
    super._this_object());
  }

  public LMS _this(org.omg.CORBA.ORB orb) 
  {
    return LMSHelper.narrow(
    super._this_object(orb));
  }


} // class LMSPOA
