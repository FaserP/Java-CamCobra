package RegionalMonitoringCentre;


/**
* RegionalMonitoringCentre/RMCPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ./idl/rmc.idl
* Friday, 29 April 2016 00:01:59 o'clock BST
*/

public abstract class RMCPOA extends org.omg.PortableServer.Servant
 implements RegionalMonitoringCentre.RMCOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("add_station", new java.lang.Integer (0));
    _methods.put ("remove_station", new java.lang.Integer (1));
    _methods.put ("get_station", new java.lang.Integer (2));
    _methods.put ("get_stations", new java.lang.Integer (3));
    _methods.put ("get_zones", new java.lang.Integer (4));
    _methods.put ("get_sensors", new java.lang.Integer (5));
    _methods.put ("get_sensors_data", new java.lang.Integer (6));
    _methods.put ("register_user", new java.lang.Integer (7));
    _methods.put ("get_all_warnings", new java.lang.Integer (8));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // RegionalMonitoringCentre/RMC/add_station
       {
         LocalMonitoringStation.LMS lms = LocalMonitoringStation.LMSHelper.read (in);
         this.add_station (lms);
         out = $rh.createReply();
         break;
       }

       case 1:  // RegionalMonitoringCentre/RMC/remove_station
       {
         LocalMonitoringStation.LMS station = LocalMonitoringStation.LMSHelper.read (in);
         this.remove_station (station);
         out = $rh.createReply();
         break;
       }

       case 2:  // RegionalMonitoringCentre/RMC/get_station
       {
         String station = in.read_string ();
         LocalMonitoringStation.LMS $result = null;
         $result = this.get_station (station);
         out = $rh.createReply();
         LocalMonitoringStation.LMSHelper.write (out, $result);
         break;
       }

       case 3:  // RegionalMonitoringCentre/RMC/get_stations
       {
         String $result[] = null;
         $result = this.get_stations ();
         out = $rh.createReply();
         RegionalMonitoringCentre.StationsHelper.write (out, $result);
         break;
       }

       case 4:  // RegionalMonitoringCentre/RMC/get_zones
       {
         String station = in.read_string ();
         String $result[] = null;
         $result = this.get_zones (station);
         out = $rh.createReply();
         LocalMonitoringStation.ZonesHelper.write (out, $result);
         break;
       }

       case 5:  // RegionalMonitoringCentre/RMC/get_sensors
       {
         String station = in.read_string ();
         String zone = in.read_string ();
         SensorCamera.Sensor $result[] = null;
         $result = this.get_sensors (station, zone);
         out = $rh.createReply();
         LocalMonitoringStation.SensorsHelper.write (out, $result);
         break;
       }

       case 6:  // RegionalMonitoringCentre/RMC/get_sensors_data
       {
         String station = in.read_string ();
         String zone = in.read_string ();
         String $result[][] = null;
         $result = this.get_sensors_data (station, zone);
         out = $rh.createReply();
         RegionalMonitoringCentre.Array1Helper.write (out, $result);
         break;
       }

       case 7:  // RegionalMonitoringCentre/RMC/register_user
       {
         RegionalMonitoringCentre.User aUser = RegionalMonitoringCentre.UserHelper.read (in);
         String lms = in.read_string ();
         String zone = in.read_string ();
         this.register_user (aUser, lms, zone);
         out = $rh.createReply();
         break;
       }

       case 8:  // RegionalMonitoringCentre/RMC/get_all_warnings
       {
         String lms = in.read_string ();
         String zone = in.read_string ();
         RegionalMonitoringCentre.Warning $result[] = null;
         $result = this.get_all_warnings (lms, zone);
         out = $rh.createReply();
         RegionalMonitoringCentre.WarningsHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:RegionalMonitoringCentre/RMC:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public RMC _this() 
  {
    return RMCHelper.narrow(
    super._this_object());
  }

  public RMC _this(org.omg.CORBA.ORB orb) 
  {
    return RMCHelper.narrow(
    super._this_object(orb));
  }


} // class RMCPOA
